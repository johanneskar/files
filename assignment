__winc_id__ = "ae539110d03e49ea8738fd413ac44ba8"
__human_name__ = "files"
import os
def clean_cache():
    import glob
    if os.path.isdir("/home/john/Documents/Winc/files/cache"):
        import glob
        files = glob.glob('/home/john/Documents/Winc/files/cache/*')
        print(files)
        for file in files:
            os.remove(file)
    else:
        new_folder = "/home/john/Documents/Winc/files/cache"
        os.mkdir(new_folder)
    return()
def cache_zip(zip_file_path, cache_dir_path):
    import zipfile
    if not os.path.isdir(cache_dir_path):
        os.mkdir(cache_dir_path)
    if zipfile.is_zipfile(zip_file_path):
        with zipfile.ZipFile(zip_file_path, 'r') as archive:
            archive.extractall(cache_dir_path)
    else:
        print("File is not a zip file")
    
       
def cached_files():
    only_files_abs = []
    all_cache_abs =[]
    all_in_cache = os.listdir("/home/john/Documents/Winc/files/cache") 
    os.chdir("/home/john/Documents/Winc/files/cache")
    for item in all_in_cache:
        all_cache_abs.append(os.path.abspath(item))
        if os.path.isfile(item):
            only_files_abs.append(os.path.abspath(item))
    return only_files_abs
        
def find_password(list_of_file_paths):
    print(len(list_of_file_paths))
    for file in list_of_file_paths:
        f = open(file, "r")
        for x in f:
            if "password" in x:
                password = x[10:(len(x))-1]
                print(f)
                break
        f.close()
    return password

print(find_password(cached_files()))
